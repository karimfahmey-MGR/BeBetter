services:
  # Directus web service
  - type: web
    name: directus
    env: node
    dockerfilePath: ./directus/Dockerfile
    plan: starter
    autoDeploy: true
    envVars:
      # Connection string to PostgreSQL provided by the Render database service
      - key: DB_CONNECTION_STRING
        fromDatabase:
          name: bebetter-db
          property: connectionString
      # Connection string to Redis (keyâ€“value store) provided by the Render cache service
      - key: CACHE_CONNECTION_STRING
        fromService:
          name: bebetter-cache
          property: connectionString
      # Directus admin email and password (set these secrets in Render before deploy)
      - key: ADMIN_EMAIL
        sync: false
      - key: ADMIN_PASSWORD
        sync: false
      # Public URL used by mobile clients to access APIs
      - key: PUBLIC_URL
        sync: false
      # Enable Directus telemetry (optional)
      - key: DIRECTUS_TELEMETRY
        value: "false"

  # Worker service to handle background tasks
  - type: worker
    name: directus-worker
    env: node
    dockerfilePath: ./directus/Dockerfile
    plan: starter
    autoDeploy: true
    #command: node worker.js
    envVars:
      - key: DB_CONNECTION_STRING
        fromDatabase:
          name: bebetter-db
          property: connectionString
      - key: CACHE_CONNECTION_STRING
        fromService:
          name: bebetter-cache
          property: connectionString
      - key: ADMIN_EMAIL
        sync: false
      - key: ADMIN_PASSWORD
        sync: false
      - key: PUBLIC_URL
        sync: false


databases:
  - name: bebetter-db
   # type: postgres
    plan: starter
